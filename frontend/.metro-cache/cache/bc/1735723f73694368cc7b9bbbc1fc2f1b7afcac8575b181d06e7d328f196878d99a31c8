{"dependencies":[{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"getGameStats\", {\n    enumerable: true,\n    get: function () {\n      return getGameStats;\n    }\n  });\n  Object.defineProperty(exports, \"recordGameResult\", {\n    enumerable: true,\n    get: function () {\n      return recordGameResult;\n    }\n  });\n  Object.defineProperty(exports, \"resetStats\", {\n    enumerable: true,\n    get: function () {\n      return resetStats;\n    }\n  });\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[0], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  const STORAGE_KEY = 'elemental_conquest_stats';\n  const defaultStats = {\n    gamesPlayed: 0,\n    wins: {\n      fire: 0,\n      water: 0,\n      earth: 0,\n      wind: 0\n    },\n    totalWins: 0,\n    winStreak: 0,\n    bestWinStreak: 0\n  };\n  const getGameStats = async () => {\n    try {\n      const stats = await AsyncStorage.default.getItem(STORAGE_KEY);\n      return stats ? JSON.parse(stats) : defaultStats;\n    } catch {\n      return defaultStats;\n    }\n  };\n  const recordGameResult = async (playerElement, won) => {\n    try {\n      const stats = await getGameStats();\n      stats.gamesPlayed++;\n      if (won) {\n        stats.wins[playerElement] = (stats.wins[playerElement] || 0) + 1;\n        stats.totalWins++;\n        stats.winStreak++;\n        stats.bestWinStreak = Math.max(stats.bestWinStreak, stats.winStreak);\n      } else {\n        stats.winStreak = 0;\n      }\n      await AsyncStorage.default.setItem(STORAGE_KEY, JSON.stringify(stats));\n    } catch (error) {\n      console.error('Failed to save game stats:', error);\n    }\n  };\n  const resetStats = async () => {\n    try {\n      await AsyncStorage.default.setItem(STORAGE_KEY, JSON.stringify(defaultStats));\n    } catch (error) {\n      console.error('Failed to reset stats:', error);\n    }\n  };\n});","lineCount":77,"map":[[12,2,21,0,"Object"],[12,8,21,0],[12,9,21,0,"defineProperty"],[12,23,21,0],[12,24,21,0,"exports"],[12,31,21,0],[13,4,21,0,"enumerable"],[13,14,21,0],[14,4,21,0,"get"],[14,7,21,0],[14,18,21,0,"get"],[14,19,21,0],[15,6,21,0],[15,13,21,0,"getGameStats"],[15,25,21,0],[16,4,21,0],[17,2,21,0],[18,2,30,0,"Object"],[18,8,30,0],[18,9,30,0,"defineProperty"],[18,23,30,0],[18,24,30,0,"exports"],[18,31,30,0],[19,4,30,0,"enumerable"],[19,14,30,0],[20,4,30,0,"get"],[20,7,30,0],[20,18,30,0,"get"],[20,19,30,0],[21,6,30,0],[21,13,30,0,"recordGameResult"],[21,29,30,0],[22,4,30,0],[23,2,30,0],[24,2,51,0,"Object"],[24,8,51,0],[24,9,51,0,"defineProperty"],[24,23,51,0],[24,24,51,0,"exports"],[24,31,51,0],[25,4,51,0,"enumerable"],[25,14,51,0],[26,4,51,0,"get"],[26,7,51,0],[26,18,51,0,"get"],[26,19,51,0],[27,6,51,0],[27,13,51,0,"resetStats"],[27,23,51,0],[28,4,51,0],[29,2,51,0],[30,2,1,0],[30,6,1,0,"_reactNativeAsyncStorageAsyncStorage"],[30,42,1,0],[30,45,1,0,"require"],[30,52,1,0],[30,53,1,0,"_dependencyMap"],[30,67,1,0],[31,2,1,0],[31,6,1,0,"AsyncStorage"],[31,18,1,0],[31,21,1,0,"_interopDefault"],[31,36,1,0],[31,37,1,0,"_reactNativeAsyncStorageAsyncStorage"],[31,73,1,0],[32,2,11,0],[32,8,11,6,"STORAGE_KEY"],[32,19,11,17],[32,22,11,20],[32,48,11,46],[33,2,13,0],[33,8,13,6,"defaultStats"],[33,20,13,29],[33,23,13,32],[34,4,14,2,"gamesPlayed"],[34,15,14,13],[34,17,14,15],[34,18,14,16],[35,4,15,2,"wins"],[35,8,15,6],[35,10,15,8],[36,6,15,10,"fire"],[36,10,15,14],[36,12,15,16],[36,13,15,17],[37,6,15,19,"water"],[37,11,15,24],[37,13,15,26],[37,14,15,27],[38,6,15,29,"earth"],[38,11,15,34],[38,13,15,36],[38,14,15,37],[39,6,15,39,"wind"],[39,10,15,43],[39,12,15,45],[40,4,15,47],[40,5,15,48],[41,4,16,2,"totalWins"],[41,13,16,11],[41,15,16,13],[41,16,16,14],[42,4,17,2,"winStreak"],[42,13,17,11],[42,15,17,13],[42,16,17,14],[43,4,18,2,"bestWinStreak"],[43,17,18,15],[43,19,18,17],[44,2,19,0],[44,3,19,1],[45,2,21,7],[45,8,21,13,"getGameStats"],[45,20,21,25],[45,23,21,28],[45,29,21,28,"getGameStats"],[45,30,21,28],[45,35,21,60],[46,4,22,2],[46,8,22,6],[47,6,23,4],[47,12,23,10,"stats"],[47,17,23,15],[47,20,23,18],[47,26,23,24,"AsyncStorage"],[47,38,23,36],[47,39,23,36,"default"],[47,46,23,36],[47,47,23,37,"getItem"],[47,54,23,44],[47,55,23,45,"STORAGE_KEY"],[47,66,23,56],[47,67,23,57],[48,6,24,4],[48,13,24,11,"stats"],[48,18,24,16],[48,21,24,19,"JSON"],[48,25,24,23],[48,26,24,24,"parse"],[48,31,24,29],[48,32,24,30,"stats"],[48,37,24,35],[48,38,24,36],[48,41,24,39,"defaultStats"],[48,53,24,51],[49,4,25,2],[49,5,25,3],[49,6,25,4],[49,12,25,10],[50,6,26,4],[50,13,26,11,"defaultStats"],[50,25,26,23],[51,4,27,2],[52,2,28,0],[52,3,28,1],[53,2,30,7],[53,8,30,13,"recordGameResult"],[53,24,30,29],[53,27,30,32],[53,33,30,32,"recordGameResult"],[53,34,30,39,"playerElement"],[53,47,30,60],[53,49,30,62,"won"],[53,52,30,74],[53,57,30,94],[54,4,31,2],[54,8,31,6],[55,6,32,4],[55,12,32,10,"stats"],[55,17,32,15],[55,20,32,18],[55,26,32,24,"getGameStats"],[55,38,32,36],[55,39,32,37],[55,40,32,38],[56,6,34,4,"stats"],[56,11,34,9],[56,12,34,10,"gamesPlayed"],[56,23,34,21],[56,25,34,23],[57,6,36,4],[57,10,36,8,"won"],[57,13,36,11],[57,15,36,13],[58,8,37,6,"stats"],[58,13,37,11],[58,14,37,12,"wins"],[58,18,37,16],[58,19,37,17,"playerElement"],[58,32,37,30],[58,33,37,31],[58,36,37,34],[58,37,37,35,"stats"],[58,42,37,40],[58,43,37,41,"wins"],[58,47,37,45],[58,48,37,46,"playerElement"],[58,61,37,59],[58,62,37,60],[58,66,37,64],[58,67,37,65],[58,71,37,69],[58,72,37,70],[59,8,38,6,"stats"],[59,13,38,11],[59,14,38,12,"totalWins"],[59,23,38,21],[59,25,38,23],[60,8,39,6,"stats"],[60,13,39,11],[60,14,39,12,"winStreak"],[60,23,39,21],[60,25,39,23],[61,8,40,6,"stats"],[61,13,40,11],[61,14,40,12,"bestWinStreak"],[61,27,40,25],[61,30,40,28,"Math"],[61,34,40,32],[61,35,40,33,"max"],[61,38,40,36],[61,39,40,37,"stats"],[61,44,40,42],[61,45,40,43,"bestWinStreak"],[61,58,40,56],[61,60,40,58,"stats"],[61,65,40,63],[61,66,40,64,"winStreak"],[61,75,40,73],[61,76,40,74],[62,6,41,4],[62,7,41,5],[62,13,41,11],[63,8,42,6,"stats"],[63,13,42,11],[63,14,42,12,"winStreak"],[63,23,42,21],[63,26,42,24],[63,27,42,25],[64,6,43,4],[65,6,45,4],[65,12,45,10,"AsyncStorage"],[65,24,45,22],[65,25,45,22,"default"],[65,32,45,22],[65,33,45,23,"setItem"],[65,40,45,30],[65,41,45,31,"STORAGE_KEY"],[65,52,45,42],[65,54,45,44,"JSON"],[65,58,45,48],[65,59,45,49,"stringify"],[65,68,45,58],[65,69,45,59,"stats"],[65,74,45,64],[65,75,45,65],[65,76,45,66],[66,4,46,2],[66,5,46,3],[66,6,46,4],[66,13,46,11,"error"],[66,18,46,16],[66,20,46,18],[67,6,47,4,"console"],[67,13,47,11],[67,14,47,12,"error"],[67,19,47,17],[67,20,47,18],[67,48,47,46],[67,50,47,48,"error"],[67,55,47,53],[67,56,47,54],[68,4,48,2],[69,2,49,0],[69,3,49,1],[70,2,51,7],[70,8,51,13,"resetStats"],[70,18,51,23],[70,21,51,26],[70,27,51,26,"resetStats"],[70,28,51,26],[70,33,51,53],[71,4,52,2],[71,8,52,6],[72,6,53,4],[72,12,53,10,"AsyncStorage"],[72,24,53,22],[72,25,53,22,"default"],[72,32,53,22],[72,33,53,23,"setItem"],[72,40,53,30],[72,41,53,31,"STORAGE_KEY"],[72,52,53,42],[72,54,53,44,"JSON"],[72,58,53,48],[72,59,53,49,"stringify"],[72,68,53,58],[72,69,53,59,"defaultStats"],[72,81,53,71],[72,82,53,72],[72,83,53,73],[73,4,54,2],[73,5,54,3],[73,6,54,4],[73,13,54,11,"error"],[73,18,54,16],[73,20,54,18],[74,6,55,4,"console"],[74,13,55,11],[74,14,55,12,"error"],[74,19,55,17],[74,20,55,18],[74,44,55,42],[74,46,55,44,"error"],[74,51,55,49],[74,52,55,50],[75,4,56,2],[76,2,57,0],[76,3,57,1],[77,0,57,2],[77,3]],"functionMap":{"names":["<global>","getGameStats","recordGameResult","resetStats"],"mappings":"AAA;4BCoB;CDO;gCEE;CFmB;0BGE;CHM"},"hasCjsExports":false},"type":"js/module"}]}