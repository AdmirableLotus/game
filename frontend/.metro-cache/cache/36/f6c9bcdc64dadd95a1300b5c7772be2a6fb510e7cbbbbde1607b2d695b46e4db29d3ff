{"dependencies":[{"name":"fs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":24,"index":24}}],"key":"/446D+0IZVMo9Qz4Ixqnyf8fty0=","exportNames":["*"],"imports":1}},{"name":"path","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":39},"end":{"line":2,"column":28,"index":54}}],"key":"sC7uOmzp0ncn/Io61vx77lEWh8A=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  const fs = require(_dependencyMap[0], \"fs\");\n  const path = require(_dependencyMap[1], \"path\");\n  const pathFile = path.join(__dirname, 'path.txt');\n  function getElectronPath() {\n    let executablePath;\n    if (fs.existsSync(pathFile)) {\n      executablePath = fs.readFileSync(pathFile, 'utf-8');\n    }\n    if (process.env.ELECTRON_OVERRIDE_DIST_PATH) {\n      return path.join(process.env.ELECTRON_OVERRIDE_DIST_PATH, executablePath || 'electron');\n    }\n    if (executablePath) {\n      return path.join(__dirname, 'dist', executablePath);\n    } else {\n      throw new Error('Electron failed to install correctly, please delete node_modules/electron and try installing again');\n    }\n  }\n  module.exports = getElectronPath();\n});","lineCount":20,"map":[[2,2,1,0],[2,8,1,6,"fs"],[2,10,1,8],[2,13,1,11,"require"],[2,20,1,18],[2,21,1,18,"_dependencyMap"],[2,35,1,18],[2,44,1,23],[2,45,1,24],[3,2,2,0],[3,8,2,6,"path"],[3,12,2,10],[3,15,2,13,"require"],[3,22,2,20],[3,23,2,20,"_dependencyMap"],[3,37,2,20],[3,48,2,27],[3,49,2,28],[4,2,4,0],[4,8,4,6,"pathFile"],[4,16,4,14],[4,19,4,17,"path"],[4,23,4,21],[4,24,4,22,"join"],[4,28,4,26],[4,29,4,27,"__dirname"],[4,38,4,36],[4,40,4,38],[4,50,4,48],[4,51,4,49],[5,2,6,0],[5,11,6,9,"getElectronPath"],[5,26,6,24,"getElectronPath"],[5,27,6,24],[5,29,6,28],[6,4,7,2],[6,8,7,6,"executablePath"],[6,22,7,20],[7,4,8,2],[7,8,8,6,"fs"],[7,10,8,8],[7,11,8,9,"existsSync"],[7,21,8,19],[7,22,8,20,"pathFile"],[7,30,8,28],[7,31,8,29],[7,33,8,31],[8,6,9,4,"executablePath"],[8,20,9,18],[8,23,9,21,"fs"],[8,25,9,23],[8,26,9,24,"readFileSync"],[8,38,9,36],[8,39,9,37,"pathFile"],[8,47,9,45],[8,49,9,47],[8,56,9,54],[8,57,9,55],[9,4,10,2],[10,4,11,2],[10,8,11,6,"process"],[10,15,11,13],[10,16,11,14,"env"],[10,19,11,17],[10,20,11,18,"ELECTRON_OVERRIDE_DIST_PATH"],[10,47,11,45],[10,49,11,47],[11,6,12,4],[11,13,12,11,"path"],[11,17,12,15],[11,18,12,16,"join"],[11,22,12,20],[11,23,12,21,"process"],[11,30,12,28],[11,31,12,29,"env"],[11,34,12,32],[11,35,12,33,"ELECTRON_OVERRIDE_DIST_PATH"],[11,62,12,60],[11,64,12,62,"executablePath"],[11,78,12,76],[11,82,12,80],[11,92,12,90],[11,93,12,91],[12,4,13,2],[13,4,14,2],[13,8,14,6,"executablePath"],[13,22,14,20],[13,24,14,22],[14,6,15,4],[14,13,15,11,"path"],[14,17,15,15],[14,18,15,16,"join"],[14,22,15,20],[14,23,15,21,"__dirname"],[14,32,15,30],[14,34,15,32],[14,40,15,38],[14,42,15,40,"executablePath"],[14,56,15,54],[14,57,15,55],[15,4,16,2],[15,5,16,3],[15,11,16,9],[16,6,17,4],[16,12,17,10],[16,16,17,14,"Error"],[16,21,17,19],[16,22,17,20],[16,122,17,120],[16,123,17,121],[17,4,18,2],[18,2,19,0],[19,2,21,0,"module"],[19,8,21,6],[19,9,21,7,"exports"],[19,16,21,14],[19,19,21,17,"getElectronPath"],[19,34,21,32],[19,35,21,33],[19,36,21,34],[20,0,21,35],[20,3]],"functionMap":{"names":["<global>","getElectronPath"],"mappings":"AAA;ACK;CDa"},"hasCjsExports":true},"type":"js/module"}]}